name: Sync Fork and Rename

on:
  push:
  schedule:
    - cron: '2 */1 * * *'

jobs:
  repo-sync-and-rename:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set Git user identity
        run: |
          git config --global user.email "hjchjchjc4352@outlook.com"
          git config --global user.name "hjchjchjc4352"
        working-directory: ${{ github.workspace }}

      - name: Make a dummy commit
        run: |
          echo "Dummy commit to force push" >> dummy.txt
          git add dummy.txt
          git commit -m "Dummy commit to force push"
        working-directory: ${{ github.workspace }}

      - name: Push local commits to remote
        run: git push
        working-directory: ${{ github.workspace }}

      - name: Sync with upstream
        uses: TG908/fork-sync@v1.6.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: snakem982
          head: main
          base: main

      - name: Rename files
        run: |
          # 在这里编写脚本来动态识别并重命名文件
          # 以下是一个简单的示例，你可能需要根据实际情况修改

          # 获取所有文件名
          files=$(ls clash*.yaml)

          # 循环遍历文件名
          for file in $files; do
name: Sync Fork and Rename

on:
  push:
  schedule:
    - cron: '0 */2 * * *'

jobs:
  repo-sync-and-rename:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set Git user identity
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
        working-directory: ${{ github.workspace }}

      - name: Make a dummy commit
        run: |
          echo "Dummy commit to force push" >> dummy.txt
          git add dummy.txt
          git commit -m "Dummy commit to force push"
        working-directory: ${{ github.workspace }}

      - name: Push local commits to remote
        run: git push
        working-directory: ${{ github.workspace }}

      - name: Sync with upstream
        uses: TG908/fork-sync@v1.6.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: snakem982
          head: main
          base: main

      - name: Rename files
        run: |
          # 在这里编写脚本来动态识别并重命名文件
          # 以下是一个简单的示例，你可能需要根据实际情况修改

          # 获取所有文件名
          files=$(ls clash*.yaml)

          # 循环遍历文件名
          for file in $files; do
name: Sync Fork and Rename

on:
  push:
  schedule:
    - cron: '0 */2 * * *'

jobs:
  repo-sync-and-rename:
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      
      - name: Set Git user identity
        run: |
          git config --global user.email "you@example.com"
          git config --global user.name "Your Name"
        working-directory: ${{ github.workspace }}

      - name: Make a dummy commit
        run: |
          echo "Dummy commit to force push" >> dummy.txt
          git add dummy.txt
          git commit -m "Dummy commit to force push"
        working-directory: ${{ github.workspace }}

      - name: Push local commits to remote
        run: git push
        working-directory: ${{ github.workspace }}

      - name: Sync with upstream
        uses: TG908/fork-sync@v1.6.3
        with:
          github_token: ${{ secrets.GITHUB_TOKEN }}
          owner: snakem982
          head: main
          base: main

      - name: Rename files
        run: |
          # 在这里编写脚本来动态识别并重命名文件
          # 以下是一个简单的示例，你可能需要根据实际情况修改

          # 获取所有文件名
          files=$(ls clash*.yaml)

          # 循环遍历文件名
          for file in $files; do
            # 判断文件名是否为 "clash.yaml"
            if [ "$file" != "clash.yaml" ]; then
              # 生成新的文件名 clash.yaml
              new_name="clash.yaml"
              # 重命名文件，使用相对路径
              mv "$file" "./$new_name"
            fi
          done
        working-directory: ${{ github.workspace }}
        
      - name: Commit and force push changes
        run: |
          # 获取当前目录下的文件列表
          ls -la

          # 添加所有更改到 Git
          git add .
          git commit -m "Rename files"
          git push --force --set-upstream origin main
        env:
          GITHUB_TOKEN: ${{ secrets.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 }}
